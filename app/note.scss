// @mixing and @include use
@mixing para-style {
  font-size: 16px;
}
#about p {
  @include para-style;
}
// using parameter for dynamic value

@mixing para-style($size,$style) {
  font-size: $size;
  text-aling: $style;
}
#about p {
  @include para-style(18px, left);
}

//Extend and inherit
.selector {
  // all styling here
}
.selector-toinherit {
  @extend .selector;
  // extra properties can add here
}
// Condition if, else
@mixin setFontSize($value) {
  @if ($value) ==small {
    font-size: 12px;
  } @else {
    font-size: 10px;
  }
}
// Use condition mixing
@include setFontSize(small);

[class*="col-"] {
  float: left;
}
// loop in sass
@for $i from 1 through 12 {
  .col-#{$i} {
    width: 100%/12 * $i;
  }
}
// While loop
$i: 1;
@while $i<13 {
  .col-#{$i} {
    width: 100%/12 * $i;
  }
  $i: $i + 1;
}

// Each map

@each $color in red, green, blue {
  .#{color}-text {
    color: $color;
  }
}
// advance map

$colors: (
  color1: red,
  color2: green,
  color3: blue,
);
@each $key, $color in $colors {
  .#{$color}-text {
    color: $color;
  }
}

// For same prefix scss
$font: (
  family: Helvetica,
  sans-serif,
  size: 18px,
  weight: bold,
);

$text: (
  align: center,
  transform: lowercase,
  overflow: hidden,
);
// OR
.selector {
  font: {
    family: Helvetica, sans-serif;
    size: 18px;
    weight: bold;
  }

  text: {
    align: center;
    transform: lowercase;
    overflow: hidden;
  }
}
